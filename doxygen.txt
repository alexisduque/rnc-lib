/** -*- mode: c++; coding: utf-8-unix -*-
    \file
    \brief General docygen documentation not pertaining to any other
           source file
 */

/** \file config.h
    \brief Definition header file generated by the configure script.
 */

/**
   \addtogroup files Source files
   @{
   \addtogroup src_test Unit testing
   @{
   \file test/original/rnc.cpp
   \file test/test-fq/test-fq.cpp
   \file test/test-matr/test-matr.cpp
   @}
   \addtogroup src_lib Library sources
   @{
   \addtogroup src_interface Interface files
   @{
   \file include/rnc
   \file include/rnc-lib/fq.h
   \file include/rnc-lib/matrix.h
   @}
   \addtogroup src_impl Implementation
   @{
   \file src/fq.cpp
   \file src/matrix.cpp
   \file src/pow_table_8
   \file src/pow_table_16
   @}
   \addtogroup src_aux Auxiliary files
   @{
   \file include/mkstr
   \file include/auto_arr_ptr
   @}
   @}
   @}
 */

/**
   \mainpage Random Linear Network Coding Library Documentation

   \e rnc-lib (working title) is (will be) a library implementing random network
   coding over the finite fields GF(256) and GF(65536). The operations are
   implemented using discrete logarithm tables instead of generic finite field
   operations, ensuring that these operations can be performed in constant time.

   The main goals of this library are practicality and speed. It is implemented
   in C/C++, and is highly optimized (inline functions, cache optimization for
   matrix operations, multi-threading). The field size is a compile time
   information; this reduces the number of indirections on memory access when
   performing operations. By default, the 16 bit finite field is used, as it
   performs almost twice as fast than the 8 bit version, and it greatly reduces
   the probability of encountering a singular matrix. Bigger finite fields are
   not feasible to be implemented with discrete logarithm tables. On an Intel
   i5-2410M CPU, using the 16 bit finite field, this library can
   encode/decode—in memory—a 128 MB file cut into 32 blocks in 4.55 seconds (28
   MB/s).

   This library is a work-in progress. It is currently being prepared to be
   shared on GitHub, and will be available in a week or so.

   The Random Network Coding Library is planned to be released under the
   Apache&nbsp;2.0 license (http://www.apache.org/licenses/LICENSE-2.0).
 */
